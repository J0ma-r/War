import random
suits = ('Hearts', 'Diamonds', 'Spades', 'Clubs')
ranks = ('Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Jack', 'Queen', 'King', 'Ace')
values = {'Two':2, 'Three':3, 'Four':4, 'Five':5, 'Six':6, 'Seven':7, 'Eight':8, 'Nine':9, 'Ten':10, 'Jack':10,
         'Queen':10, 'King':10, 'Ace':11}
         
## CREATING A CARD ##

class Card:
    def __init__(self,suit,rank):
        self.rank = rank
        self.suit = suit
        self.value = values[rank]
        
    def __str__(self):
        return self.rank + " of " + self.suit
        
## CREATING A DECK ##

class Deck:
    def __init__(self):
        self.all_cards = []
        
        for suit in suits:
            for rank in ranks:
                #create the card object
                
                created_card = Card(suit,rank)
                self.all_cards.append(created_card)
                
    def shuffle(self):
        random.shuffle(self.all_cards)
        
    def deal_one(self):
        return self.all_cards.pop()
        

## CREATING A PLAYER

class Player:
    def __init__(self,name):
        self.name = name
        self.all_cards = []
        
    def remove_one(self):
        return self.all_cards.pop(0)
    
    def add_cards(self,new_cards):
        if type(new_cards) == type([]):
            self.all_cards.extend(new_cards)
        else:
            self.all_cards.append(new_cards)
    
    def __str__(self):
        return f"player {self.name} has {len(self.all_cards)} cards"


## GAME LOGIC ##

def war():
    
    player1 = Player('player1')
    player2 = Player('player2')
    new_deck = Deck()
    new_deck.shuffle()
    
    while len(new_deck.all_cards) != 0:
        player1.all_cards.append(new_deck.deal_one())
        player2.all_cards.append(new_deck.deal_one())
    

    turn_count = 0    
    game_on = True
    table = []
    
    while game_on == True:
        
        card1 = player1.all_cards.pop(0)
        card2 = player2.all_cards.pop(0)
        
        war = True
            
        while war == True:
                
            if len(player1.all_cards) == 0:
                print(f"Congratulations, player2 has won after {turn_count} turns! ")
                game_on = False

            elif len(player2.all_cards) == 0:
                print(f"Congratulations, player1 has won after {turn_count} turns! ")
                game_on = False

            else:
            
                if card1.value > card2.value:
                    table.append(card1)
                    table.append(card2)
                    player1.add_cards(table)
                    turn_count += 1
                    war = False


                elif card1.value < card2.value:
                    table.append(card1)
                    table.append(card2)
                    player2.add_cards(table)
                    turn_count += 1
                    war = False



                elif len(player1.all_cards) <= 3:
                    print(f"Congratulations, player2 has won here after {turn_count} turns! ")
                    game_on = False
                    break
                     
                elif len(player2.all_cards) <= 3:
                    print(f"Congratulations, player1 has won here after {turn_count} turns! ")
                    game_on = False
                    break
                    
                else:

                    table.append(card1)
                    table.append(card2)
                    table.append(player1.remove_one())
                    table.append(player1.remove_one())            
                    table.append(player1.remove_one())
                    table.append(player2.remove_one())
                    table.append(player2.remove_one())
                    table.append(player2.remove_one())
                    turn_count += 1
                        

       
    
